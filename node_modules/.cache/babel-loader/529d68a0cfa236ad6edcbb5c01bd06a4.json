{"ast":null,"code":"import todosList from \"./todos.json\";\nimport { ADD_TODO, DELETE_TODO, CLEAR_COMPLETED_TODOS, TOGGLE_TODO } from \"./actions\";\nvar initialState = {\n  todos: todosList\n};\n\nvar todosReducer = function todosReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        var newTodoList = state.todos.slice();\n        newTodoList.push(action.payload);\n        return {\n          todos: newTodoList\n        };\n      }\n\n    case CLEAR_COMPLETED_TODOS:\n      {\n        var _newTodoList = state.todos.filter(function (todo) {\n          if (todo.completed === true) {\n            return false;\n          }\n\n          return true;\n        });\n\n        return {\n          todos: _newTodoList\n        };\n      }\n\n    case TOGGLE_TODO:\n      {\n        var newnewTodos = newTodos.map(function (todo) {\n          if (todo.id === todoIdToToggle) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        });\n        return {\n          todos: newnewTodos\n        };\n      }\n\n    case DELETE_TODO:\n      {\n        var newToDoList = state.todos.filter(function (todo) {\n          if (todo.id === todoIdToDelete) {\n            return false;\n          }\n\n          return true;\n        });\n        return {\n          todos: newToDoList\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default todosReducer;","map":{"version":3,"sources":["/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/src/reducer.js"],"names":["todosList","ADD_TODO","DELETE_TODO","CLEAR_COMPLETED_TODOS","TOGGLE_TODO","initialState","todos","todosReducer","state","action","type","newTodoList","slice","push","payload","filter","todo","completed","newnewTodos","newTodos","map","id","todoIdToToggle","newToDoList","todoIdToDelete"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,qBAAhC,EAAuDC,WAAvD,QAAyE,WAAzE;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEN;AADY,CAArB;;AAIA,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AAAe;AACb,YAAMU,WAAW,GAAGH,KAAK,CAACF,KAAN,CAAYM,KAAZ,EAApB;AACAD,QAAAA,WAAW,CAACE,IAAZ,CAAiBJ,MAAM,CAACK,OAAxB;AACA,eAAO;AAAER,UAAAA,KAAK,EAAEK;AAAT,SAAP;AACD;;AACD,SAAKR,qBAAL;AAA4B;AAC1B,YAAMQ,YAAW,GAAGH,KAAK,CAACF,KAAN,CAAYS,MAAZ,CAAmB,UAAAC,IAAI,EAAI;AAC7C,cAAIA,IAAI,CAACC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD,SALmB,CAApB;;AAMA,eAAO;AAAEX,UAAAA,KAAK,EAAEK;AAAT,SAAP;AACD;;AACD,SAAKP,WAAL;AAAkB;AACZ,YAAMc,WAAW,GAAGC,QAAQ,CAACC,GAAT,CAAa,UAAAJ,IAAI,EAAI;AACvC,cAAIA,IAAI,CAACK,EAAL,KAAYC,cAAhB,EAAgC;AAC9BN,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,iBAAOD,IAAP;AACD,SALmB,CAApB;AAMA,eAAM;AAAEV,UAAAA,KAAK,EAAEY;AAAT,SAAN;AACL;;AACD,SAAKhB,WAAL;AAAkB;AACZ,YAAMqB,WAAW,GAAGf,KAAK,CAACF,KAAN,CAAYS,MAAZ,CAAmB,UAAAC,IAAI,EAAI;AAC7C,cAAIA,IAAI,CAACK,EAAL,KAAYG,cAAhB,EAAgC;AAC9B,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD,SALmB,CAApB;AAOA,eAAO;AAAElB,UAAAA,KAAK,EAAEiB;AAAT,SAAP;AACL;;AACD;AACE,aAAOf,KAAP;AAnCJ;;AAoCD;AACA,CAtCD;;AAwCA,eAAeD,YAAf","sourcesContent":["import todosList from \"./todos.json\";\nimport { ADD_TODO, DELETE_TODO, CLEAR_COMPLETED_TODOS, TOGGLE_TODO} from \"./actions\"\nconst initialState = {\n  todos: todosList\n};\n\nconst todosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      const newTodoList = state.todos.slice();\n      newTodoList.push(action.payload);\n      return { todos: newTodoList };\n    }\n    case CLEAR_COMPLETED_TODOS: {\n      const newTodoList = state.todos.filter(todo => {\n        if (todo.completed === true) {\n          return false;\n        }\n        return true;\n      });\n      return { todos: newTodoList };\n    }\n    case TOGGLE_TODO: {\n          const newnewTodos = newTodos.map(todo => {\n            if (todo.id === todoIdToToggle) {\n              todo.completed = !todo.completed;\n            }\n            return todo;\n          });\n          return{ todos: newnewTodos };\n    }\n    case DELETE_TODO: {\n          const newToDoList = state.todos.filter(todo => {\n            if (todo.id === todoIdToDelete) {\n              return false;\n            }\n            return true;\n          });\n\n          return { todos: newToDoList };\n    }\n    default:\n      return state;\n};\n}\n\nexport default todosReducer;"]},"metadata":{},"sourceType":"module"}