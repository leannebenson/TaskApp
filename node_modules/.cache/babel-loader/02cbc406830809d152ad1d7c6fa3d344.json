{"ast":null,"code":"import _classCallCheck from \"/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport TodoList from \"./todolist\";\nimport { connect } from \"react-redux\";\nimport { addTodo, clearCompletedTodos } from \"./actions\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: todosList\n    };\n\n    _this.handleDeleteAllTodo = function (event) {\n      console.log(\"Delete All\");\n\n      _this.props.clearCompletedTodos();\n    };\n\n    _this.handleToggleTodo = function (event, todoIdToToggle) {\n      //const newTodos = this.state.todos.slice();\n      _this.props.toggleTodo(todoIdToToggle);\n    };\n\n    _this.handleAddToDo = function (event) {\n      if (event.key === \"Enter\") {\n        _this.props.addTodo(event.target.value);\n\n        event.target.value = \"\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"todoapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"todos\"), React.createElement(\"input\", {\n        className: \"new-todo\",\n        placeholder: \"What needs to be done?\",\n        onKeyDown: this.handleAddToDo,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(TodoList, {\n        todos: this.props.todos //handleToggleComplete={this.handleToggleComplete}\n        //handleDeleteTodo={this.handleDeleteTodo}\n        //handleDeleteAllTodo={this.handleDeleteAllTodo}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(TodoList //handleToggleComplete={this.handleToggleComplete}\n      //handleDeleteTodo={this.handleDeleteTodo}\n      , {\n        todos: this.props.todos.filter(function (todo) {\n          return todo.completed === false;\n        }) //handleDeleteAllTodo={this.handleDeleteAllTodo}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TodoList //handleToggleComplete={this.handleToggleComplete}\n      //handleDeleteTodo={this.handleDeleteTodo}\n      , {\n        todos: this.props.todos.filter(function (todo) {\n          return todo.completed === true;\n        }) //handleDeleteAllTodo={this.handleDeleteAllTodo}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"footer\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.todos.filter(function (todo) {\n        if (todo.completed === true) {\n          return false;\n        }\n\n        return true;\n      }).length), \" \", \"item(s) left\"), React.createElement(\"ul\", {\n        className: \"filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        exact: true,\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"All\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/active\",\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Active\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/completed\",\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Completed\"))), React.createElement(\"button\", {\n        className: \"clear-completed\",\n        onClick: this.handleDeleteAllTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Clear completed\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos //array of todo objects\n\n  };\n}; //this.props.addTodo\n\n\nvar mapDispatchToProps = {\n  addTodo: addTodo,\n  clearCompletedTodos: clearCompletedTodos\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Leanimalz/Documents/kenzieProjects/assessment-todo-app-pt3/src/App.js"],"names":["React","Component","todosList","Route","NavLink","TodoList","connect","addTodo","clearCompletedTodos","App","state","todos","handleDeleteAllTodo","event","console","log","props","handleToggleTodo","todoIdToToggle","toggleTodo","handleAddToDo","key","target","value","filter","todo","completed","length","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,mBAAlB,QAA6C,WAA7C;;IAEMC,G;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAET;AADD,K;;UAGRU,mB,GAAsB,UAAAC,KAAK,EAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,YAAKC,KAAL,CAAWR,mBAAX;AACD,K;;UAMDS,gB,GAAmB,UAACJ,KAAD,EAAQK,cAAR,EAA2B;AAC5C;AACA,YAAKF,KAAL,CAAWG,UAAX,CAAsBD,cAAtB;AAED,K;;UAEDE,a,GAAgB,UAAAP,KAAK,EAAI;AACvB,UAAIA,KAAK,CAACQ,GAAN,KAAc,OAAlB,EAA2B;AACzB,cAAKL,KAAL,CAAWT,OAAX,CAAmBM,KAAK,CAACS,MAAN,CAAaC,KAAhC;;AACAV,QAAAA,KAAK,CAACS,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,K;;;;;;;6BAEQ;AACP,aACE;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,SAAS,EAAE,KAAKH,aAHlB;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAWE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWL,KADpB,CAEE;AACA;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXF,EAoBE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CACE;AACA;AAFF;AAGE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,CAAiBa,MAAjB,CAAwB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,SAAL,KAAmB,KAAvB;AAAA,SAA5B,CAHT,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApBF,EA6BE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CACE;AACA;AAFF;AAGE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWL,KAAX,CAAiBa,MAAjB,CAAwB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,SAAL,KAAmB,IAAvB;AAAA,SAA5B,CAHT,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA7BF,EAqCE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKhB,KAAL,CAAWC,KAAX,CAAiBa,MAAjB,CAAwB,UAAAC,IAAI,EAAI;AAC9B,YAAIA,IAAI,CAACC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OALD,EAKGC,MAPP,CADF,EAUY,GAVZ,iBAFF,EAeE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,eAAe,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,SAAZ;AAAsB,QAAA,eAAe,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,YAAZ;AAAyB,QAAA,eAAe,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAXF,CAfF,EAgCE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,OAAO,EAAE,KAAKf,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhCF,CArCF,CADF;AA+ED;;;;EA5GeX,S;;AA6GjB;;AAED,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR,CACc;;AADd,GAAP;AAGD,CAJD,C,CAKA;;;AACA,IAAMkB,kBAAkB,GAAG;AACzBtB,EAAAA,OAAO,EAAPA,OADyB;AAEzBC,EAAAA,mBAAmB,EAAnBA;AAFyB,CAA3B;AAKA,eAAeF,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,GAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink} from \"react-router-dom\";\nimport TodoList from \"./todolist\";\nimport { connect } from \"react-redux\";\nimport { addTodo, clearCompletedTodos } from \"./actions\"\n\nclass App extends Component {\n  //this.state.todos - app component state\n  //this.props.todos - redux state\n  state = {\n    todos: todosList\n  };\n  handleDeleteAllTodo = event => {\n    console.log(\"Delete All\");\n    this.props.clearCompletedTodos()\n  };\n\n  //handleDeleteTodo = (event, todoIdToDelete) => {\n  //  console.log(\"Deleted\");\n  //  this.props.deleteTodo(todoIdToDelete);\n  //};\n  handleToggleTodo = (event, todoIdToToggle) => {\n    //const newTodos = this.state.todos.slice();\n    this.props.toggleTodo(todoIdToToggle)\n\n  };\n\n  handleAddToDo = event => {\n    if (event.key === \"Enter\") {\n      this.props.addTodo(event.target.value);\n      event.target.value = \"\";\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown={this.handleAddToDo}\n            autoFocus\n          />\n        </header>\n        {/* / equals https://leanne_benson.gitlab.io/assessment-todo-app-pt2 */}\n        <Route exact path=\"/\">\n          <TodoList\n            todos={this.props.todos}\n            //handleToggleComplete={this.handleToggleComplete}\n            //handleDeleteTodo={this.handleDeleteTodo}\n            //handleDeleteAllTodo={this.handleDeleteAllTodo}\n          />\n        </Route>\n        {/* /active equals https://leanne_benson.gitlab.io/assessment-todo-app-pt2/active*/}\n        <Route exact path=\"/active\">\n          <TodoList\n            //handleToggleComplete={this.handleToggleComplete}\n            //handleDeleteTodo={this.handleDeleteTodo}\n            todos={this.props.todos.filter(todo => todo.completed === false)}\n            //handleDeleteAllTodo={this.handleDeleteAllTodo}\n          />\n        </Route>\n        {/* /completed equals https://leanne_benson.gitlab.io/assessment-todo-app-pt2/completed*/}\n        <Route exact path=\"/completed\">\n          <TodoList\n            //handleToggleComplete={this.handleToggleComplete}\n            //handleDeleteTodo={this.handleDeleteTodo}\n            todos={this.props.todos.filter(todo => todo.completed === true)}\n            //handleDeleteAllTodo={this.handleDeleteAllTodo}\n          />\n        </Route>\n        <footer className=\"footer\">\n          {/* <!-- This should be `0 items left` by default --> */}\n          <span className=\"todo-count\">\n            <strong>\n              {\n                this.state.todos.filter(todo => {\n                  if (todo.completed === true) {\n                    return false;\n                  }\n                  return true;\n                }).length\n              }\n            </strong>{\" \"}\n            item(s) left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <NavLink to=\"/\" exact activeClassName=\"selected\">\n                All\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/active\" activeClassName=\"selected\">\n                Active\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/completed\" activeClassName=\"selected\">\n                Completed\n              </NavLink>\n            </li>\n          </ul>\n          <button\n            className=\"clear-completed\"\n            onClick={this.handleDeleteAllTodo}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos //array of todo objects\n  }\n};\n//this.props.addTodo\nconst mapDispatchToProps = {\n  addTodo,\n  clearCompletedTodos,\n \n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}